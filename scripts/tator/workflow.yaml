apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: openem-inference-
spec:
  entrypoint: pipeline
  ttlSecondsAfterFinished: 30
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 200Gi
  templates:
  - name: pipeline
    steps:
    - - name: setup
        template: setup
    - - name: object-detect-inference
        template: object-detect-inference
    - - name: teardown
        template: teardown
  - name: setup
    container:
      image: cvisionai/openem_lite
      resources:
        limits:
          cpu: 250m
          memory: 200Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_API_SERVICE
        value: "{{workflow.parameters.rest_url}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      - name: TATOR_WORK_DIR
        value: "/work"
      - name: TATOR_PIPELINE_ARGS
        value: "{\"type_id\": 64, \"img_max_side\: 960, \"img_min_side\": 325, \"keep_threshold\": 0.30, \"media_type\": "video", \"img_ext\": \"mp4\", \"graph_url\", \"https://adamant.duckdns.org/static/bigelow.pb\", \"train_ini\": \"https://adamant.duckdns.org/static/bigelow.ini\"}"
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: ["/scripts/tator/setup.py"]
  - name: object-detector-inference
    container:
      image: cvisionai/openem_lite
      resources:
        limits:
          cpu: 1500m
          memory: 12000Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_API_SERVICE
        value: "{{workflow.parameters.rest_url}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      - name: TATOR_WORK_DIR
        value: "/work"
      - name: TATOR_PIPELINE_ARGS
        value: "{\"type_id\": 64, \"img_max_side\: 960, \"img_min_side\": 325, \"keep_threshold\": 0.30, \"media_type\": "video", \"media_type\": \"mp4\"}"
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: ["/scripts/tator/docker_entry.py"]
  - name: teardown
    container:
      image: cvisionai/openem_lite
      resources:
        limits:
          cpu: 250m
          memory: 200Mi
      env:
      - name: TATOR_MEDIA_IDS
        value: "{{workflow.parameters.media_ids}}"
      - name: TATOR_API_SERVICE
        value: "{{workflow.parameters.rest_url}}"
      - name: TATOR_AUTH_TOKEN
        value: "{{workflow.parameters.rest_token}}"
      - name: TATOR_PROJECT_ID
        value: "{{workflow.parameters.project_id}}"
      - name: TATOR_WORK_DIR
        value: "/work"
      - name: TATOR_PIPELINE_ARGS
        value: "{\"type_id\": 64, \"img_max_side\: 960, \"img_min_side\": 325, \"keep_threshold\": 0.30, \"media_type\": "video", \"media_type\": \"mp4\"}"
      volumeMounts:
      - name: workdir
        mountPath: /work
      command: [python3]
      args: ["/scripts/tator/teardown.py"]